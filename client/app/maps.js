var map = angular.module('appMaps', []);


map.controller('MapController', ['$scope', function($scope) {

  $scope.markers = [];

  var addMarker = function(lat, lng) {
    var marker = new google.maps.Marker({
      position: {lat: lat, lng: lng},
      map: $scope.map,
      title: 'Hello World!'
    });

    $scope.markers.push(marker);
  };

  //map click to add marker
  $scope.click = function(lat, lng) {
    addMarker(lat, lng);
  };

}]);

//angular directive tied to the my-map element in index.html.  This replaces my-map with the DOM elments generated by the template and modifoed by the link function
map.directive('myMap', function() {

  var link = function(scope, element, attrs) {
    // map config, default values for now
    var mapOptions = {
      center: new google.maps.LatLng(50, 2),
      zoom: 10,
      scrollwheel: false,
      show: true
    };

    // new instance of a google map, added to the first element in element
    var initMap = function() {
      scope.map = new google.maps.Map(element[0], mapOptions);

      // Add click event listener, which call the $scope.click method
      google.maps.event.addListener(scope.map, 'click', function (event) {
        var lat = event.latLng.lat();
        var lng = event.latLng.lng();
        scope.click(lat, lng);
      }); //end addListener

    };

    initMap();
  };

  return {
    template: '<div id="gmap"></div>',
    replace: true,
    //function passed into link will modify the elements that the directive adds to the dom
    link: link,
    //setting scope to false will allow scope to be shared with the controller
    scope: false
  };
});

